* This Course (Course 1 in Web Design Specialization)
Covered in this course:

- HTML syntax and semantics

- Accessibility

- How to start coding

** Week 1 - questions

what happens when you type in a URL?

what tools do you need in order to code?

what is HTML? HTML5?

** Week 2 - some theory, some code

DOM

standard HTML tags

** Week 3 - putting it all together

Validating code

- syntax

- accessibility

Domain name registration and web hosting

Final project that

- has several pages

- passes W3C validation

- passes WAVE accessibility review



** Course content
weekly videos

- lecture format - watch anywhere

- demo format - type along with the video

weekly readings

- free online textbook: [[http://textbooks.opensuny.org/the-missing-link-an-introduction-to-web-development-and-programming]]

- free online articles

weekly assessments

- quizzes

final project

- straightforward, but the final result will be ugly (CSS comes next!)


** Advice on completing this course

- work with peers

- ask questions

- never spend more than 20 minutes at a time on a problem. Don't be afraid to walk away and think about the task, or ask someone for advice.

- learn how to look things up. Independent research and learning is key in all fields, but especially so when working with computers. This is the single most important skill separating computer illiterates and computer masters.

- practice. You will not learn the material if you do not use the material. The best learning comes from making mistakes, and figuring out what you did wrong. Don't be afraid of screwing up, as screwing up is the fastest way to learn.


* Useful tools
** Firefox with Tilt 3D
https://addons.mozilla.com/en-US/firefox/addon/tilt


* What is HTML5
Hypertext Markup Language, version 5. Markup languages annotate documents, they are not programming languages. In HTML, we use tags to indicate things like headings, lists, links, images, text, etc.

** `.html` files
`.html` is the file extension for HTML files. By convention, your computer knows that `.html` files should be opened in the browser. Your browser knows how to make sense of the file, and properly display its contents.

We can write `.html` files by hand, because `.html` files are just text with some special formatting and syntax. It's very easy to read, and you can make sense out of it even if you don't know what the tags mean.

** Example HTML document
[[./week-1-docs/example_1.html]]

note that this is mostly English. The tags help the computer know what to do with the English.

The structure of the tags is called the syntax of HTML. Tags need to be opened and closed. Note the syntax for opening a tag (look at the beginning of the lines) and the syntax for closing a tag (at the end of the lines).

Each tag has a purpose, and most of them have sensible names (some of them don't, we'll make note of them). The meaning of the tags is called the semantics of HTML. Most tags are almost human readable. `<h1>hello world</h1>` means we are dealing with a "header" whose text is "hello world".




* History of HTML
** HTML version 1
Developed in 1990 as a way to link documents electronically. The internet as we know it didn't really exist back then, and this first version of HTML was used primarily by scientists who didn't care about color or styling. They just wanted to be able to send structured documents to their peers on the other side of the country (eventually, world). More on the history of networks, and the Internet, can be found in the textbook reading (which isn't too bad).

By 1993, the internet had started developing, and the users wanted graphics and colors. The Mosaic browser was developed, and it was the first graphical browser. Mosaic launched what we would recognize as the early form of the modern internet, and cat pictures spread everywhere. Mosaic caused a 341,364% annual growth of internet users, and gained competitors (Netscape in 1994, Internet Explorer in 1995).

** Browser Wars
Every browser tried to stand out as better than the other browser, so they started implementing proprietary tags like `<marquee>` and `<blink>` that wouldn't work in competitor browsers.

Computer people people got upset, and started trying to standardize HTML. Groups like IETF, W3C and WAI formed with the goal of deciding what is and is not valid HTML.

Changes in standards

| year        | movement                                      |
|-------------+-----------------------------------------------|
| 1990 - 1994 | HTML was text based, with no fancy stuff      |
| 1993        | Mosaic brings images into play                |
| 1995 - 1999 | Browser compatibility is gone                 |
| 2000 - 2005 | Browsers agree to separate content from style |
| 2005 - 2008 | HTML with CSS becomes the standard            | 

HTML verisons

| year | version   |                                          |
|------+-----------+------------------------------------------|
| 1993 | HTML 1.0  | Tim Berners-Lee                          |
| 1995 | HTML 2.0  | (Internet Engineering Task Force (IETF)) |
| 1996 | CSS 1     |                                          |
| 1997 | HTML 3.2  | (W3C), included proprietary stuff        |
| 1997 | HTML 4.0  | tried to normalize features              |
| 1998 | CSS 2     |                                          |
| 1999 | HTML 4.01 | Multiple document types                  |
| 2012 | HTML 5    | Standardization (at long last)           |

Nowadays, HTML5 is the One True Standard for HTML documents. All modern web tech is now based on HTML, CSS, JavaScript, and the DOM.
  

* How does the Internet work
LAN - Local Area Network. An isolated network of computers.

WAN - Wide Area Network. Several LANs, all connected to each other

Internet - the biggest WAN, connecting most LANs.

Servers

- hold shared resources

- always connected, waiting for requests

Clients

- machines for personal use (laptop, phone, etc.)

** Request/Response Cycle
Clients request a page (file, document, whatever) from a server, and the server sends a response.

How does it work?

URL - Uniform Resource Locator

- protocol - how to connect

- domain - who has the document

- path - which particular file on the domain are you looking for

`https://en.wikipedia.org/wiki/URL`

Using the `https` protocol, ask domain `en.wikipedia.org` for document `/wiki/URL`.

If no document is specified, the file `index.html` is the default document.

If there is a problem, the server might return an error code or error page. You can find the big list, or look up a specific code, by googling for "HTTP status codes". Wikipedia has a very nice list.

| Common error classes | description                                        |
|----------------------+----------------------------------------------------|
| 1XX - 100 series     | Informational codes                                |
| 2XX - 200 series     | Success codes                                      |
| 3XX - 300 series     | Redirection codes                                  |
| 4XX - 400 series     | Client codes (the request was bad)                 |
| 5XX - 500 series     | Server codes (the server can't perform as expected |

Common protocols:

- HTTP - HyperText Transfer Protocol

- HTTPS - Secure HTTP

- FTP - File Transfer Protocol

The `.com`, `.org`, `.net`, and others are called top-level domains (TLD). All domain names (wikipedia, google, facebook, etc.) exist within a TLD. ICAAN decides what is and is not a TLD.

** IP address
Things called Domain Name Servers (DNS) keep track of where all the different domains are served from. They keep track of servers and clients using IP addresses. There are two kinds of IP addresses.

IPv4 uses 4 sets of 3 numeric digits: `192.168.1.10`. IP address are similar to street addresses. We are running out of these, but they are still the most common type of IP address. There are 2^32 possible IPv4 IP address, which isn't as many as you might think.

IPv6 uses 8 sets of 4 hexadecimal digits, which allows for 2^128 possible IPv6 addresses. IPv6 looks like this: `fe80::c9cc:690e:c831:70f8`. You'll note that this is only 5 sets of numbers, and that's because we are nowhere near to needing all 8 sets just yet.


* Working with HTML files
show how to make the file system show file extensions

show how to create a new folder for each project - important!

show how to create new, empty text files

show how to change a file's type from `.txt` to `.html`

show how to choose to open `.html` as either text or in browser

show troubleshooting and common problems

show refresh, and show F5

if you change your filenames, make sure you are looking at the correct file in the browser

[[./week-1-docs/hello-world.html][Hello World]]


